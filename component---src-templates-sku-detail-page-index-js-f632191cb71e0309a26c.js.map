{"version":3,"sources":["webpack:///./src/templates/SkuDetailPage/styles.js","webpack:///./src/templates/SkuDetailPage/ProductColors/styles.js","webpack:///./src/templates/SkuDetailPage/ProductColors/index.js","webpack:///./src/templates/SkuDetailPage/SkuPrice/styles.js","webpack:///./src/templates/SkuDetailPage/SkuPrice/index.js","webpack:///./src/templates/SkuDetailPage/ProductName/index.js","webpack:///./src/templates/SkuDetailPage/AddToCartButton/styles.js","webpack:///./src/templates/SkuDetailPage/AddToCartButton/index.js","webpack:///./src/templates/SkuDetailPage/ProductSizes/index.js","webpack:///./src/templates/SkuDetailPage/index.js"],"names":["Main","styled","Box","theme","breakpoints","down","ProductImage","isMobile","spacing","ProductDetails","Row","Box_","Column","selected","palette","secondary","main","ProductColor","productSelected","skus","skuSelected","colorIds","Object","keys","skuIds","useThemeContext","length","Typography","component","variant","color","gutterBottom","colors","attributes","name","map","colorId","skuId","metadata","defaultSize","sku","key","fields","slug","Link","to","id","ImageLocal","localFiles","alt","Price","Typography_","VAT","SkuPrice","priceFormat","price","ProductName","ButtonText","Button_","AddToCartButton","skuIdSelectedWithSize","dispatch","useCartContext","Button","fullWidth","endIcon","style","fontSize","onClick","type","payload","quantity","ProductSizes","sizeSelected","setSizeSelected","options","sizeId","value","sizes","category","FormSelect","valueSelected","setValueSelected","skuSizeSelected","SkuDetailPage","pageContext","useProductsContext","products","productId","useState","Divider","ProductColors"],"mappings":"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","file":"component---src-templates-sku-detail-page-index-js-f632191cb71e0309a26c.js","sourcesContent":["import styled from 'styled-components'\r\nimport Box from '@material-ui/core/Box'\r\nimport theme from 'theme'\r\n\r\nexport const Main = styled(Box)`\r\n  display: flex;\r\n\r\n  ${theme.breakpoints.down('sm')} {\r\n    flex-direction: column;\r\n  }\r\n`\r\nexport const ProductImage = styled(Box)`\r\n  flex: 1;\r\n  margin-bottom: ${({ isMobile }) => (isMobile ? `${theme.spacing(2)}px` : `${theme.spacing(0)}px`)};\r\n  margin-right: ${({ isMobile }) => (isMobile ? `${theme.spacing(0)}px` : `${theme.spacing(3)}px`)};\r\n`\r\nexport const ProductDetails = styled(Box)`\r\n  flex: 1;\r\n`\r\n","import styled from 'styled-components'\r\nimport Box_ from '@material-ui/core/Box'\r\n\r\nimport theme from 'theme'\r\n\r\nexport const Row = styled(Box_)`\r\n  display: flex;\r\n`\r\n\r\nexport const Column = styled(Box_)`\r\n  width: ${({ isMobile }) => (isMobile ? '25%' : '10%')};\r\n  margin-right: ${theme.spacing(1)}px;\r\n  margin-bottom: ${theme.spacing(2)}px;\r\n  ${({ selected }) => selected && `border-bottom: 2px solid ${theme.palette.secondary.main}`}\r\n`\r\n\r\nexport const ImageWrapper = styled(Box_)`\r\n  border: 1px solid green;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport colors from 'constants/colors'\r\nimport ImageLocal from 'components/ImageLocal'\r\nimport { useThemeContext } from 'context/ThemeContext'\r\nimport Link from 'components/Link'\r\nimport * as S from './styles'\r\n\r\nconst ProductColor = ({ productSelected, skus, skuSelected }) => {\r\n  const colorIds = Object.keys(productSelected.skuIds)\r\n  const { isMobile } = useThemeContext()\r\n\r\n  if (colorIds.length === 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography component=\"h4\" variant=\"caption\" color=\"secondary\" gutterBottom>\r\n        {`Color: ${colors[skuSelected.attributes.color].name}`}\r\n      </Typography>\r\n      <S.Row>\r\n        {colorIds.map((colorId) => {\r\n          const skuId = productSelected.skuIds[colorId][productSelected.metadata.defaultSize]\r\n          const sku = skus[skuId]\r\n\r\n          return (\r\n            <S.Column key={colorId} selected={skuSelected.fields.slug === sku.fields.slug} isMobile={isMobile}>\r\n              <Link to={`/${skus[sku.id].fields.slug}`}>\r\n                <ImageLocal localFiles={sku.localFiles} alt={sku.fields.slug} />\r\n              </Link>\r\n            </S.Column>\r\n          )\r\n        })}\r\n      </S.Row>\r\n    </>\r\n  )\r\n}\r\n\r\nProductColor.propTypes = {\r\n  productSelected: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    metadata: PropTypes.shape({ defaultSize: PropTypes.string.isRequired }).isRequired,\r\n    skuIds: PropTypes.shape({}).isRequired,\r\n  }).isRequired,\r\n  skus: PropTypes.shape({}).isRequired,\r\n  skuSelected: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    attributes: PropTypes.shape({ color: PropTypes.string.isRequired }).isRequired,\r\n    fields: PropTypes.shape({\r\n      slug: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport default ProductColor\r\n","import styled from 'styled-components'\r\nimport Box_ from '@material-ui/core/Box'\r\nimport Typography_ from '@material-ui/core/Typography'\r\nimport theme from 'theme'\r\n\r\nexport const Box = styled(Box_)`\r\n  align-items: center;\r\n  display: flex;\r\n  margin: ${theme.spacing(2)}px ${theme.spacing(0)}px;\r\n`\r\nexport const Price = styled(Typography_)``\r\nexport const VAT = styled(Typography_)`\r\n  color: grey;\r\n  margin-left: ${theme.spacing(2)}px;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport priceFormat from 'utils/priceFormat'\r\n\r\nimport * as S from './styles'\r\n\r\nconst SkuPrice = ({ skuSelected }) => {\r\n  return (\r\n    <S.Box>\r\n      <S.Price color=\"secondary\" component=\"span\" variant=\"h6\">\r\n        {priceFormat(skuSelected.price)}\r\n      </S.Price>\r\n      <S.VAT component=\"span\" variant=\"caption\">\r\n        VAT Included\r\n      </S.VAT>\r\n    </S.Box>\r\n  )\r\n}\r\n\r\nSkuPrice.propTypes = {\r\n  skuSelected: PropTypes.shape({ price: PropTypes.number.isRequired }).isRequired,\r\n}\r\n\r\nexport default SkuPrice\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst ProductName = ({ productSelected }) => (\r\n  <Typography component=\"h1\" variant=\"h4\" color=\"secondary\">\r\n    {productSelected.name}\r\n  </Typography>\r\n)\r\n\r\nProductName.propTypes = {\r\n  productSelected: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport default ProductName\r\n","import Button_ from 'components/Button'\r\nimport styled from 'styled-components'\r\nimport Box_ from '@material-ui/core/Box'\r\n\r\nexport const Button = styled(Button_)`\r\n  flex: 1;\r\n`\r\nexport const ButtonText = styled(Box_)`\r\n  flex: 1;\r\n  justify-conten: flex-start;\r\n  display: flex;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useCartContext } from 'context/CartContext'\r\n\r\nimport * as S from './styles'\r\n\r\nconst AddToCartButton = ({ skuIdSelectedWithSize }) => {\r\n  const [, dispatch] = useCartContext()\r\n\r\n  const onClick = () => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: { skuId: skuIdSelectedWithSize, quantity: 1 } })\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      fullWidth\r\n      endIcon={<ShoppingCart style={{ fontSize: 40 }} />}\r\n      onClick={onClick}\r\n    >\r\n      <S.ButtonText>Add To Cart</S.ButtonText>\r\n    </Button>\r\n  )\r\n}\r\n\r\nAddToCartButton.propTypes = {\r\n  skuIdSelectedWithSize: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default AddToCartButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport sizes from 'constants/sizes'\r\nimport FormSelect from 'components/FormSelect'\r\nimport { useCartContext } from 'context/CartContext'\r\n\r\nconst ProductSizes = ({ productSelected, skuSelected, sizeSelected, setSizeSelected }) => {\r\n  const [_, dispatch] = useCartContext()\r\n\r\n  const options = Object.keys(productSelected.skuIds[skuSelected.attributes.color]).map((sizeId) => ({\r\n    key: sizeId,\r\n    value: sizeId,\r\n    name: sizes[skuSelected.attributes.category][sizeId].name,\r\n  }))\r\n\r\n  const setValueSelected = (valueSelected) => {\r\n    dispatch({ type: 'UPDATE_SKU_SIZE_SELECTED', payload: { skuSizeSelected: valueSelected } })\r\n    setSizeSelected(valueSelected)\r\n  }\r\n\r\n  return <FormSelect name=\"size\" valueSelected={sizeSelected} setValueSelected={setValueSelected} options={options} />\r\n}\r\n\r\nProductSizes.propTypes = {\r\n  productSelected: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    metadata: PropTypes.shape({ defaultSize: PropTypes.string.isRequired }).isRequired,\r\n    skuIds: PropTypes.shape({}).isRequired,\r\n  }).isRequired,\r\n  skuSelected: PropTypes.shape({\r\n    attributes: PropTypes.shape({\r\n      category: PropTypes.string.isRequired,\r\n      color: PropTypes.string.isRequired,\r\n      size: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  sizeSelected: PropTypes.string.isRequired,\r\n  setSizeSelected: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ProductSizes\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport { useCartContext } from 'context/CartContext'\r\nimport { useProductsContext } from 'context/ProductsContext'\r\nimport ImageLocal from 'components/ImageLocal'\r\nimport { useThemeContext } from 'context/ThemeContext'\r\n\r\nimport * as S from './styles'\r\n\r\nimport ProductColors from './ProductColors'\r\nimport SkuPrice from './SkuPrice'\r\nimport ProductName from './ProductName'\r\nimport AddToCartButton from './AddToCartButton'\r\nimport ProductSizes from './ProductSizes'\r\n\r\nconst SkuDetailPage = ({ pageContext: { skuId } }) => {\r\n  const [{ skuSizeSelected }] = useCartContext()\r\n  const { products, skus } = useProductsContext()\r\n  const { isMobile } = useThemeContext()\r\n\r\n  // this sku does not contain the right size\r\n  // the size is handle in the local state\r\n  const skuSelected = skus[skuId]\r\n  const productSelected = products[skuSelected.productId]\r\n\r\n  const [sizeSelected, setSizeSelected] = useState(skuSizeSelected || productSelected.metadata.defaultSize)\r\n  const skuIdSelectedWithSize = productSelected.skuIds[skuSelected.attributes.color][sizeSelected]\r\n\r\n  return (\r\n    <S.Main>\r\n      <S.ProductImage isMobile={isMobile}>\r\n        <ImageLocal localFiles={skuSelected.localFiles} alt={productSelected.name} />\r\n      </S.ProductImage>\r\n      <S.ProductDetails>\r\n        <ProductName productSelected={productSelected} />\r\n        <Divider />\r\n        <SkuPrice skuSelected={skuSelected} />\r\n        <ProductColors productSelected={productSelected} skus={skus} skuSelected={skuSelected} />\r\n        <ProductSizes\r\n          productSelected={productSelected}\r\n          skuSelected={skuSelected}\r\n          sizeSelected={sizeSelected}\r\n          setSizeSelected={setSizeSelected}\r\n        />\r\n        <AddToCartButton skuIdSelectedWithSize={skuIdSelectedWithSize} />\r\n        {/* <DeliveryConditions /> */}\r\n      </S.ProductDetails>\r\n    </S.Main>\r\n  )\r\n}\r\n\r\nSkuDetailPage.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    skuId: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport default SkuDetailPage\r\n"],"sourceRoot":""}